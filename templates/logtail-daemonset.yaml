{{ if .Values.logService.enabled }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: logtail
  namespace: kube-system
  labels:
    k8s-app: logtail
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: logtail
        kubernetes.io/cluster-service: "true"
        version: v1.0
      # This annotation ensures that logtail does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key": "node.alpha.kubernetes.io/ismaster", "effect": "NoSchedule"}]'
    spec:
      containers:
      - name: logtail
        image: registry.cn-hangzhou.aliyuncs.com/log-service/logtail:latest
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        env:
          - name: "ALIYUN_LOGTAIL_CONFIG"
            value: "/etc/ilogtail/conf/{{ $.Values.logService.region }}/ilogtail_config.json"
          - name: "ALIYUN_LOGTAIL_USER_ID"
            value: "{{ $.Values.logService.userID }}"
          - name: "ALIYUN_LOGTAIL_USER_DEFINED_ID"
            value: "{{ $.Values.logService.machineGroup }}"
        volumeMounts:
        - name: sock
          mountPath: /var/run/docker.sock
        - name: root
          mountPath: /logtail_host
          readOnly: true
      #nodeSelector:
      #  alpha.kubernetes.io/ilogtail-ds-ready: "true"
      terminationGracePeriodSeconds: 30
      volumes:
      - name: sock
        hostPath:
          path: /var/run/docker.sock
      - name: root
        hostPath:
          path: /
{{ end }}